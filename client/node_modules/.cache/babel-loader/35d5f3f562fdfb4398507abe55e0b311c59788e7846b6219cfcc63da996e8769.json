{"ast":null,"code":"import React from \"react\";\nimport { getDownloadURL, getStorage, ref, uploadBytesResumable } from \"firebase/storage\";\nimport { onValue, ref as dbref, push, query, orderByChild, equalTo, set } from \"firebase/database\";\nconst SearchByid = async id => {\n  console.log(id, \"id\");\n  return new Promise((resolve, reject) => {\n    const queryRef = query(ref(db, \"classdata\"), orderByChild(\"classId\"), equalTo(id));\n    onValue(queryRef, snapshot => {\n      if (snapshot.exists()) {\n        const userData = snapshot.val();\n        const userDataArray = Object.values(userData);\n        resolve(userDataArray);\n        console.log(\"User data:\", userDataArray[0]);\n        setUserData(userDataArray[0]);\n      } else {\n        resolve(null);\n        console.log(\"No data found for id:\", id);\n        alert(\"No data found for id:\", id);\n      }\n    }, error => {\n      reject(error);\n      console.log(\"Error fetching data:\", error);\n    });\n  });\n};\n_c = SearchByid;\nexport default SearchByid;\nvar _c;\n$RefreshReg$(_c, \"SearchByid\");","map":{"version":3,"names":["React","getDownloadURL","getStorage","ref","uploadBytesResumable","onValue","dbref","push","query","orderByChild","equalTo","set","SearchByid","id","console","log","Promise","resolve","reject","queryRef","db","snapshot","exists","userData","val","userDataArray","Object","values","setUserData","alert","error","_c","$RefreshReg$"],"sources":["/Users/mohsinidrees/Desktop/techsummit/application/client/src/pages/class/Search.jsx"],"sourcesContent":["import React from \"react\";\nimport {\n  getDownloadURL,\n  getStorage,\n  ref,\n  uploadBytesResumable,\n} from \"firebase/storage\";\nimport {\n  onValue,\n  ref as dbref,\n  push,\n  query,\n  orderByChild,\n  equalTo,\n  set,\n} from \"firebase/database\";\nconst SearchByid = async (id) => {\n  console.log(id, \"id\");\n  return new Promise((resolve, reject) => {\n    const queryRef = query(\n      ref(db, \"classdata\"),\n      orderByChild(\"classId\"),\n      equalTo(id)\n    );\n\n    onValue(\n      queryRef,\n      (snapshot) => {\n        if (snapshot.exists()) {\n          const userData = snapshot.val();\n          const userDataArray = Object.values(userData);\n          resolve(userDataArray);\n          console.log(\"User data:\", userDataArray[0]);\n          setUserData(userDataArray[0]);\n        } else {\n          resolve(null);\n          console.log(\"No data found for id:\", id);\n          alert(\"No data found for id:\", id);\n        }\n      },\n      (error) => {\n        reject(error);\n        console.log(\"Error fetching data:\", error);\n      }\n    );\n  });\n};\nexport default SearchByid;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,cAAc,EACdC,UAAU,EACVC,GAAG,EACHC,oBAAoB,QACf,kBAAkB;AACzB,SACEC,OAAO,EACPF,GAAG,IAAIG,KAAK,EACZC,IAAI,EACJC,KAAK,EACLC,YAAY,EACZC,OAAO,EACPC,GAAG,QACE,mBAAmB;AAC1B,MAAMC,UAAU,GAAG,MAAOC,EAAE,IAAK;EAC/BC,OAAO,CAACC,GAAG,CAACF,EAAE,EAAE,IAAI,CAAC;EACrB,OAAO,IAAIG,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IACtC,MAAMC,QAAQ,GAAGX,KAAK,CACpBL,GAAG,CAACiB,EAAE,EAAE,WAAW,CAAC,EACpBX,YAAY,CAAC,SAAS,CAAC,EACvBC,OAAO,CAACG,EAAE,CACZ,CAAC;IAEDR,OAAO,CACLc,QAAQ,EACPE,QAAQ,IAAK;MACZ,IAAIA,QAAQ,CAACC,MAAM,CAAC,CAAC,EAAE;QACrB,MAAMC,QAAQ,GAAGF,QAAQ,CAACG,GAAG,CAAC,CAAC;QAC/B,MAAMC,aAAa,GAAGC,MAAM,CAACC,MAAM,CAACJ,QAAQ,CAAC;QAC7CN,OAAO,CAACQ,aAAa,CAAC;QACtBX,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEU,aAAa,CAAC,CAAC,CAAC,CAAC;QAC3CG,WAAW,CAACH,aAAa,CAAC,CAAC,CAAC,CAAC;MAC/B,CAAC,MAAM;QACLR,OAAO,CAAC,IAAI,CAAC;QACbH,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,EAAE,CAAC;QACxCgB,KAAK,CAAC,uBAAuB,EAAEhB,EAAE,CAAC;MACpC;IACF,CAAC,EACAiB,KAAK,IAAK;MACTZ,MAAM,CAACY,KAAK,CAAC;MACbhB,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEe,KAAK,CAAC;IAC5C,CACF,CAAC;EACH,CAAC,CAAC;AACJ,CAAC;AAACC,EAAA,GA9BInB,UAAU;AA+BhB,eAAeA,UAAU;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}