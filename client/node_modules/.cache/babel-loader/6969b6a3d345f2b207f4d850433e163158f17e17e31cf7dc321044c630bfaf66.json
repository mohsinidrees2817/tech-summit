{"ast":null,"code":"var _jsxFileName = \"/Users/mohsinidrees/Desktop/techsummit/application/client/src/pages/class/index.js\",\n  _s = $RefreshSig$();\nimport Reactm, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { db, app } from \"../../config/firebase\";\nimport { toast } from \"react-toastify\";\nimport { getDownloadURL, getStorage, ref, uploadBytesResumable } from \"firebase/storage\";\nimport { onValue, ref as dbref, push, set } from \"firebase/database\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Index = () => {\n  _s();\n  const [formData, setFormData] = useState({});\n  const [allClasses, setAllClasses] = useState([]);\n  const id = useParams();\n  const [classname, setClassname] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [ImageProgress, setImageProgress] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState([]);\n  const [imageuploaded, setImageUploaded] = useState(false);\n  const [imageUploadError, setImageUploadError] = useState(false);\n  const storeImage = async file => {\n    return new Promise((resolve, reject) => {\n      const storage = getStorage(app);\n      const fileName = new Date().getTime() + file.name;\n      const storageRef = ref(storage, fileName);\n      const uploadTask = uploadBytesResumable(storageRef, file);\n      uploadTask.on(\"state_changed\", snapshot => {\n        const progress = (snapshot.bytesTransferred / snapshot.totalBytes * 100).toFixed(2);\n        setImageProgress(`${progress}%`);\n        console.log(`Upload is ${progress}% done`);\n      }, error => {\n        reject(error);\n      }, () => {\n        getDownloadURL(uploadTask.snapshot.ref).then(downloadURL => {\n          resolve(downloadURL);\n        });\n      });\n    });\n  };\n  useEffect(() => {\n    let classes = JSON.parse(localStorage.getItem(\"classes\"));\n    if (classes) {\n      setAllClasses(classes);\n    }\n    let classRoom = classes.filter(item => item.id === id.id);\n    setClassname(classRoom[0].classRoomName);\n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (imageuploaded === false) {\n      alert(\"Please upload image first\");\n    } else {\n      Adddatatodb();\n    }\n  };\n  const handleFileUpload = e => {\n    if (selectedFile.length > 0) {\n      setUploading(true);\n      setImageUploadError(false);\n      const file = selectedFile[0]; // Get the first file from the array\n      storeImage(file).then(url => {\n        console.log(\"url\", url);\n        setFormData({\n          ...formData,\n          imageUrl: url\n        });\n        setImageUploadError(false);\n        setUploading(false);\n        setImageUploaded(true);\n        toast.success(\"File Uploaded successfully\");\n      }).catch(err => {\n        setImageUploadError(\"Image upload failed (2 mb max per image)\");\n        setUploading(false);\n        console.error(\"image upload failed\", err);\n      });\n    } else {\n      setImageUploadError(\"You can only upload 6 images per listing\");\n      setUploading(false);\n      console.error(\"image upoload failed: No file selected\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center py-4 font-bold mx-12 border-b\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-2xl py-2\",\n        children: [\"Class Name: \", classname, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-2xl py-2\",\n        children: [\"ID: \", id.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-end items-end py-4 font-bold mx-12 \",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"flex w-full max-w-[200px] bg-black p-4 text-white rounded-sm my-4 items-center justify-center cursor-pointer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center py-4 font-bold mx-12 \",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-2xl py-2\",\n        children: \"Class Content: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Index, \"TLOL2WocSbaU9O7n0+Z+rs2kwWM=\", false, function () {\n  return [useParams];\n});\n_c = Index;\nexport default Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["Reactm","useEffect","useState","useParams","db","app","toast","getDownloadURL","getStorage","ref","uploadBytesResumable","onValue","dbref","push","set","jsxDEV","_jsxDEV","Fragment","_Fragment","Index","_s","formData","setFormData","allClasses","setAllClasses","id","classname","setClassname","uploading","setUploading","ImageProgress","setImageProgress","selectedFile","setSelectedFile","imageuploaded","setImageUploaded","imageUploadError","setImageUploadError","storeImage","file","Promise","resolve","reject","storage","fileName","Date","getTime","name","storageRef","uploadTask","on","snapshot","progress","bytesTransferred","totalBytes","toFixed","console","log","error","then","downloadURL","classes","JSON","parse","localStorage","getItem","classRoom","filter","item","classRoomName","handleSubmit","e","preventDefault","alert","Adddatatodb","handleFileUpload","length","url","imageUrl","success","catch","err","children","className","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/Users/mohsinidrees/Desktop/techsummit/application/client/src/pages/class/index.js"],"sourcesContent":["import Reactm, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { db, app } from \"../../config/firebase\";\nimport { toast } from \"react-toastify\";\n\nimport {\n  getDownloadURL,\n  getStorage,\n  ref,\n  uploadBytesResumable,\n} from \"firebase/storage\";\nimport { onValue, ref as dbref, push, set } from \"firebase/database\";\nconst Index = () => {\n  const [formData, setFormData] = useState({});\n\n  const [allClasses, setAllClasses] = useState([]);\n  const id = useParams();\n  const [classname, setClassname] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [ImageProgress, setImageProgress] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState([]);\n  const [imageuploaded, setImageUploaded] = useState(false);\n  const [imageUploadError, setImageUploadError] = useState(false);\n  const storeImage = async (file) => {\n    return new Promise((resolve, reject) => {\n      const storage = getStorage(app);\n      const fileName = new Date().getTime() + file.name;\n      const storageRef = ref(storage, fileName);\n      const uploadTask = uploadBytesResumable(storageRef, file);\n      uploadTask.on(\n        \"state_changed\",\n        (snapshot) => {\n          const progress = (\n            (snapshot.bytesTransferred / snapshot.totalBytes) *\n            100\n          ).toFixed(2);\n          setImageProgress(`${progress}%`);\n          console.log(`Upload is ${progress}% done`);\n        },\n        (error) => {\n          reject(error);\n        },\n        () => {\n          getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n            resolve(downloadURL);\n          });\n        }\n      );\n    });\n  };\n  useEffect(() => {\n    let classes = JSON.parse(localStorage.getItem(\"classes\"));\n    if (classes) {\n      setAllClasses(classes);\n    }\n    let classRoom = classes.filter((item) => item.id === id.id);\n    setClassname(classRoom[0].classRoomName);\n  }, []);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (imageuploaded === false) {\n      alert(\"Please upload image first\");\n    } else {\n      Adddatatodb();\n    }\n  };\n\n  const handleFileUpload = (e) => {\n    if (selectedFile.length > 0) {\n      setUploading(true);\n      setImageUploadError(false);\n      const file = selectedFile[0]; // Get the first file from the array\n      storeImage(file)\n        .then((url) => {\n          console.log(\"url\", url);\n          setFormData({\n            ...formData,\n            imageUrl: url,\n          });\n          setImageUploadError(false);\n          setUploading(false);\n          setImageUploaded(true);\n          toast.success(\"File Uploaded successfully\");\n        })\n        .catch((err) => {\n          setImageUploadError(\"Image upload failed (2 mb max per image)\");\n          setUploading(false);\n          console.error(\"image upload failed\", err);\n        });\n    } else {\n      setImageUploadError(\"You can only upload 6 images per listing\");\n      setUploading(false);\n      console.error(\"image upoload failed: No file selected\");\n    }\n  };\n  return (\n    <>\n      <div className=\"flex justify-between items-center py-4 font-bold mx-12 border-b\">\n        <p className=\"text-2xl py-2\">Class Name: {classname} </p>\n        <p className=\"text-2xl py-2\">ID: {id.id}</p>\n      </div>\n      <div className=\"flex justify-end items-end py-4 font-bold mx-12 \">\n        <input\n          type=\"file\"\n          className=\"flex w-full max-w-[200px] bg-black p-4 text-white rounded-sm my-4 items-center justify-center cursor-pointer\"\n        />\n      </div>\n      <div className=\"flex justify-between items-center py-4 font-bold mx-12 \">\n        <p className=\"text-2xl py-2\">Class Content: </p>\n      </div>\n    </>\n  );\n};\n\nexport default Index;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}