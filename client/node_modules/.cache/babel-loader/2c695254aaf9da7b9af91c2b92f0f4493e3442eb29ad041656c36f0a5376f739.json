{"ast":null,"code":"// import { createSlice } from \"@reduxjs/toolkit\";\n\n// const favoritesSlice = createSlice({\n//   name: \"favorites\",\n//   initialState: [],\n//   reducers: {\n//     addFavorite: (state, action) => {\n//       // Add the new favorite product to the state\n//       state.push(action.payload);\n//     },\n//     removeFavorite: (state, action) => {\n//       // Remove the favorite product with the specified ID from the state\n//       const index = state.findIndex((p) => p.id === action.payload);\n//       // let favorites = favourite.filter((element) => {\n//       //   return element.productID !== product.productID;\n//       // });\n//       if (index !== -1) {\n//         state.splice(index, 1);\n//       }\n//     },\n//   },\n// });\n\n// export const { addFavorite, removeFavorite } = favoritesSlice.actions;\n\n// export default favoritesSlice.reducer;\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst favoritesSlice = createSlice({\n  name: \"favorites\",\n  initialState: [],\n  reducers: {\n    addFavorite: (state, action) => {\n      // Add the new favorite product to the state\n      state.push(action.payload);\n    },\n    removeFavorite: (state, action) => {\n      // Remove the favorite product with the specified ID from the state\n      const index = state.findIndex(p => p._id === action.payload);\n      if (index !== -1) {\n        state.splice(index, 1);\n      }\n    }\n  }\n});\nexport const {\n  addFavorite,\n  removeFavorite\n} = favoritesSlice.actions;\nexport default favoritesSlice.reducer;","map":{"version":3,"names":["createSlice","favoritesSlice","name","initialState","reducers","addFavorite","state","action","push","payload","removeFavorite","index","findIndex","p","_id","splice","actions","reducer"],"sources":["/Users/mohsinidrees/Desktop/techsummit/application/client/src/app/reducers/favouriteProduct.jsx"],"sourcesContent":["// import { createSlice } from \"@reduxjs/toolkit\";\n\n// const favoritesSlice = createSlice({\n//   name: \"favorites\",\n//   initialState: [],\n//   reducers: {\n//     addFavorite: (state, action) => {\n//       // Add the new favorite product to the state\n//       state.push(action.payload);\n//     },\n//     removeFavorite: (state, action) => {\n//       // Remove the favorite product with the specified ID from the state\n//       const index = state.findIndex((p) => p.id === action.payload);\n//       // let favorites = favourite.filter((element) => {\n//       //   return element.productID !== product.productID;\n//       // });\n//       if (index !== -1) {\n//         state.splice(index, 1);\n//       }\n//     },\n//   },\n// });\n\n// export const { addFavorite, removeFavorite } = favoritesSlice.actions;\n\n// export default favoritesSlice.reducer;\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst favoritesSlice = createSlice({\n  name: \"favorites\",\n  initialState: [],\n  reducers: {\n    addFavorite: (state, action) => {\n      // Add the new favorite product to the state\n      state.push(action.payload);\n    },\n    removeFavorite: (state, action) => {\n      // Remove the favorite product with the specified ID from the state\n      const index = state.findIndex((p) => p._id === action.payload);\n      if (index !== -1) {\n        state.splice(index, 1);\n      }\n    },\n  },\n});\n\nexport const { addFavorite, removeFavorite } = favoritesSlice.actions;\n\nexport default favoritesSlice.reducer;\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,cAAc,GAAGD,WAAW,CAAC;EACjCE,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACRC,WAAW,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC9B;MACAD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAC5B,CAAC;IACDC,cAAc,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MACjC;MACA,MAAMI,KAAK,GAAGL,KAAK,CAACM,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAKP,MAAM,CAACE,OAAO,CAAC;MAC9D,IAAIE,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBL,KAAK,CAACS,MAAM,CAACJ,KAAK,EAAE,CAAC,CAAC;MACxB;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEN,WAAW;EAAEK;AAAe,CAAC,GAAGT,cAAc,CAACe,OAAO;AAErE,eAAef,cAAc,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}