{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { db, app } from \"../../config/firebase\";\n// // import { toast } from \"react-toastify\";\n\n// import {\n//   getDownloadURL,\n//   getStorage,\n//   ref,\n//   uploadBytesResumable,\n// } from \"firebase/storage\";\n// import { onValue, ref as dbref, push, set } from \"firebase/database\";\n\n// const Index = () => {\n//   const [formData, setFormData] = useState({});\n//   const [selectedFile, setSelectedFile] = useState([]);\n//   const [imageuploaded, setImageUploaded] = useState(false);\n//   const [imageUploadError, setImageUploadError] = useState(false);\n//   const [uploading, setUploading] = useState(false);\n//   const [ImageProgress, setImageProgress] = useState(\"\");\n//   const handleChange = (e) => {\n//     setFormData({\n//       ...formData,\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (imageuploaded === false) {\n//       alert(\"Please upload image first\");\n//     } else {\n//       Adddatatodb();\n//     }\n//   };\n\n//   const handleImageSubmit = (e) => {\n//     if (selectedFile.length > 0) {\n//       setUploading(true);\n//       setImageUploadError(false);\n//       const file = selectedFile[0]; // Get the first file from the array\n//       storeImage(file)\n//         .then((url) => {\n//           console.log(\"url\", url);\n//           setFormData({\n//             ...formData,\n//             imageUrl: url,\n//           });\n//           setImageUploadError(false);\n//           setUploading(false);\n//           setImageUploaded(true);\n//           // toast.success(\"Image Uploaded successfully\");\n//         })\n//         .catch((err) => {\n//           setImageUploadError(\"Image upload failed (2 mb max per image)\");\n//           setUploading(false);\n//           console.error(\"image upload failed\", err);\n//         });\n//     } else {\n//       setImageUploadError(\"You can only upload 6 images per listing\");\n//       setUploading(false);\n//       console.error(\"image upoload failed: No file selected\");\n//     }\n//   };\n\n//   const storeImage = async (file) => {\n//     return new Promise((resolve, reject) => {\n//       const storage = getStorage(app);\n//       const fileName = new Date().getTime() + file.name;\n//       const storageRef = ref(storage, fileName);\n//       const uploadTask = uploadBytesResumable(storageRef, file);\n//       uploadTask.on(\n//         \"state_changed\",\n//         (snapshot) => {\n//           const progress = (\n//             (snapshot.bytesTransferred / snapshot.totalBytes) *\n//             100\n//           ).toFixed(2);\n//           setImageProgress(`${progress}%`);\n//           console.log(`Upload is ${progress}% done`);\n//         },\n//         (error) => {\n//           reject(error);\n//         },\n//         () => {\n//           getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n//             resolve(downloadURL);\n//           });\n//         }\n//       );\n//     });\n//   };\n\n//   const Adddatatodb = async () => {\n//     try {\n//       const formDataOrdered = {\n//         imageUrl: formData.imageUrl,\n//         CNIC: formData.CNIC,\n//         ApplicantName: formData.ApplicantName,\n//         FatherName: formData.FatherName,\n//         LicenseNo: formData.LicenseNo,\n//         WeaponType: formData.WeaponType,\n//         Caliber: formData.Caliber,\n//         WeaponNo: formData.WeaponNo,\n//         Cartridges: formData.Cartridges,\n//         Status: formData.Status,\n//         IssueDate: formData.IssueDate,\n//         ExpiryDate: formData.ExpiryDate,\n//       };\n//       push(dbref(db, \"licensedata\"), formDataOrdered)\n//         .then(() => {\n//           // Clear input and update local state\n//           // toast.success(\"Data added successfully\");\n//         })\n//         .catch((error) => {\n//           // toast.success(\"Error adding data: \", error);\n//         });\n//       setFormData({});\n//     } catch (error) {\n//       console.error(\"Error uploading image and saving form data:\", error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"flex justify-center flex-col  items-center w-[100vw] min-h-[100vh] bg-gray-300\">\n//       <img src=\"/assets/logo.png\" alt=\"\" className=\"w-[200px]\" />\n//       <p className=\"font-bold text-xl my-2\">Add details</p>\n//       <form\n//         className=\"my-4 flex flex-col gap-2 justify-start items-start border-2 p-4 \"\n//         onSubmit={(e) => handleSubmit(e)}\n//       >\n//         <label htmlFor=\"AplicantName\" className=\"text-normal\">\n//           Aplicant Name:\n//           <input\n//             type=\"text\"\n//             name=\"ApplicantName\"\n//             value={formData.ApplicantName || \"\"}\n//             onChange={handleChange}\n//             required\n//             placeholder=\"IFTIKHAR AHMAD\"\n//             className=\"px-4 py-2 min-w-[350px] rounded-md bg-transparent border border-[#0c3f16] focus:outline-none focus:border-blue-500\"\n//           />\n//         </label>\n\n//         <label htmlFor=\"FatherName\" className=\"text-normal\">\n//           Father Name:\n//           <input\n//             type=\"text\"\n//             name=\"FatherName\"\n//             value={formData.FatherName || \"\"}\n//             onChange={handleChange}\n//             required\n//             placeholder=\"SULTAN AHMAD\"\n//             className=\"px-4 py-2 min-w-[350px] rounded-md bg-transparent border border-[#0c3f16] focus:outline-none focus:border-blue-500\"\n//           />\n//         </label>\n//         <label htmlFor=\"CNIC\" className=\"text-normal\">\n//           CNIC Number:\n//           <input\n//             type=\"number\"\n//             name=\"CNIC\"\n//             value={formData.CNIC || \"\"}\n//             onChange={handleChange}\n//             required\n//             minLength=\"13\"\n//             maxLength=\"13\"\n//             className=\"px-4 py-2 min-w-[350px] rounded-md bg-transparent border border-[#0c3f16] focus:outline-none focus:border-blue-500\"\n//           />\n//         </label>\n\n//         <label htmlFor=\"LicenseNo\" className=\"text-normal\">\n//           License No.:\n//           <input\n//             type=\"text\"\n//             name=\"LicenseNo\"\n//             value={formData.LicenseNo || \"\"}\n//             onChange={handleChange}\n//             required\n//             placeholder=\"ID-3943\"\n//             className=\"px-4 py-2 min-w-[350px] rounded-md bg-transparent border border-[#0c3f16] focus:outline-none focus:border-blue-500\"\n//           />\n//         </label>\n\n//         <label htmlFor=\"WeaponType\" className=\"text-normal\">\n//           Weapon Type:\n//           <input\n//             type=\"text\"\n//             name=\"WeaponType\"\n//             value={formData.WeaponType || \"\"}\n//             onChange={handleChange}\n//             placeholder=\"Pistol\"\n//             required\n//             className=\"px-4 py-2 min-w-[350px] rounded-md bg-transparent border border-[#0c3f16] focus:outline-none focus:border-blue-500\"\n//           />\n//         </label>\n\n//         <label htmlFor=\"Caliber\" className=\"text-normal\">\n//           Caliber:\n//           <input\n//             type=\"text\"\n//             name=\"Caliber\"\n//             value={formData.Caliber || \"\"}\n//             onChange={handleChange}\n//             required\n//             placeholder=\"223 Bore\"\n//             className=\"px-4 py-2 min-w-[350px] rounded-md bg-transparent border border-[#0c3f16] focus:outline-none focus:border-blue-500\"\n//           />\n//         </label>\n\n//         <label htmlFor=\"WeaponNo\" className=\"text-normal\">\n//           Weapon No.:\n//           <input\n//             type=\"number\"\n//             name=\"WeaponNo\"\n//             value={formData.WeaponNo || \"\"}\n//             onChange={handleChange}\n//             required\n//             placeholder=\"604137\"\n//             className=\"px-4 py-2 min-w-[350px] rounded-md bg-transparent border border-[#0c3f16] focus:outline-none focus:border-blue-500\"\n//           />\n//         </label>\n\n//         <label htmlFor=\"Cartridges\" className=\"text-normal\">\n//           Cartridges:\n//           <input\n//             type=\"number\"\n//             name=\"Cartridges\"\n//             value={formData.Cartridges || \"\"}\n//             onChange={handleChange}\n//             required\n//             placeholder=\"200\"\n//             className=\"px-4 py-2 min-w-[350px] rounded-md bg-transparent border border-[#0c3f16] focus:outline-none focus:border-blue-500\"\n//           />\n//         </label>\n\n//         <label htmlFor=\"Status\" className=\"text-normal\">\n//           Status:\n//           <input\n//             type=\"text\"\n//             name=\"Status\"\n//             value={formData.Status || \"\"}\n//             onChange={handleChange}\n//             required\n//             placeholder=\"All Pakistan\"\n//             className=\"px-4 py-2 min-w-[350px] rounded-md bg-transparent border border-[#0c3f16] focus:outline-none focus:border-blue-500\"\n//           />\n//         </label>\n\n//         <label htmlFor=\"IssueDate\" className=\"text-normal\">\n//           Issue date:\n//           <input\n//             type=\"date\"\n//             name=\"IssueDate\"\n//             value={formData.IssueDate || \"\"}\n//             onChange={handleChange}\n//             required\n//             placeholder=\"03-02-2024\"\n//             className=\"px-4 py-2 min-w-[350px] rounded-md bg-transparent border border-[#0c3f16] focus:outline-none focus:border-blue-500\"\n//           />\n//         </label>\n\n//         <label htmlFor=\"ExpiryDate\" className=\"text-normal\">\n//           Expiry date:\n//           <input\n//             type=\"date\"\n//             name=\"ExpiryDate\"\n//             value={formData.ExpiryDate || \"\"}\n//             onChange={handleChange}\n//             required\n//             placeholder=\"31-12-2028\"\n//             className=\"px-4 py-2 min-w-[350px] rounded-md bg-transparent border border-[#0c3f16] focus:outline-none focus:border-blue-500\"\n//           />\n//         </label>\n//         <div className=\"flex jusitfy-start items-end gap-2 flex-col\">\n//           {formData.imageUrl ? (\n//             <img src={formData.imageUrl} alt=\"\" className=\"w-[200px]\" />\n//           ) : (\n//             <>\n//               <label htmlFor=\"ExpiryDate\" className=\"text-normal\">\n//                 Upload Image:\n//                 <input\n//                   type=\"file\"\n//                   onChange={(e) => setSelectedFile(e.target.files)}\n//                   required\n//                   accept=\"image/*\"\n//                   className=\"border p-3 rounded-lg\"\n//                 />\n//               </label>\n//               {selectedFile?.length > 0 && (\n//                 <>\n//                   <div\n//                     className=\"max-w-[200px] h-[40px] w-full rounded-md p-2 bg-slate-300 border border-[#0c3f16] cursor-pointer\"\n//                     onClick={handleImageSubmit}\n//                   >\n//                     {uploading ? `Uploading... ${ImageProgress}` : \"Upload\"}\n//                   </div>\n//                   <p className=\"text-red-700 text-sm\">\n//                     {imageUploadError && imageUploadError}\n//                   </p>\n//                 </>\n//               )}\n//             </>\n//           )}\n//         </div>\n//         <button\n//           type=\"submit\"\n//           className=\"max-w-[120px] w-full rounded-md p-2 bg-slate-300 border border-[#0c3f16]\"\n//         >\n//           Submit\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Index;","map":{"version":3,"names":[],"sources":["/Users/mohsinidrees/Desktop/techsummit/application/client/src/pages/home/index.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { db, app } from \"../../config/firebase\";\n// // import { toast } from \"react-toastify\";\n\n// import {\n//   getDownloadURL,\n//   getStorage,\n//   ref,\n//   uploadBytesResumable,\n// } from \"firebase/storage\";\n// import { onValue, ref as dbref, push, set } from \"firebase/database\";\n\n// const Index = () => {\n//   const [formData, setFormData] = useState({});\n//   const [selectedFile, setSelectedFile] = useState([]);\n//   const [imageuploaded, setImageUploaded] = useState(false);\n//   const [imageUploadError, setImageUploadError] = useState(false);\n//   const [uploading, setUploading] = useState(false);\n//   const [ImageProgress, setImageProgress] = useState(\"\");\n//   const handleChange = (e) => {\n//     setFormData({\n//       ...formData,\n//       [e.target.name]: e.target.value,\n//     });\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (imageuploaded === false) {\n//       alert(\"Please upload image first\");\n//     } else {\n//       Adddatatodb();\n//     }\n//   };\n\n//   const handleImageSubmit = (e) => {\n//     if (selectedFile.length > 0) {\n//       setUploading(true);\n//       setImageUploadError(false);\n//       const file = selectedFile[0]; // Get the first file from the array\n//       storeImage(file)\n//         .then((url) => {\n//           console.log(\"url\", url);\n//           setFormData({\n//             ...formData,\n//             imageUrl: url,\n//           });\n//           setImageUploadError(false);\n//           setUploading(false);\n//           setImageUploaded(true);\n//           // toast.success(\"Image Uploaded successfully\");\n//         })\n//         .catch((err) => {\n//           setImageUploadError(\"Image upload failed (2 mb max per image)\");\n//           setUploading(false);\n//           console.error(\"image upload failed\", err);\n//         });\n//     } else {\n//       setImageUploadError(\"You can only upload 6 images per listing\");\n//       setUploading(false);\n//       console.error(\"image upoload failed: No file selected\");\n//     }\n//   };\n\n//   const storeImage = async (file) => {\n//     return new Promise((resolve, reject) => {\n//       const storage = getStorage(app);\n//       const fileName = new Date().getTime() + file.name;\n//       const storageRef = ref(storage, fileName);\n//       const uploadTask = uploadBytesResumable(storageRef, file);\n//       uploadTask.on(\n//         \"state_changed\",\n//         (snapshot) => {\n//           const progress = (\n//             (snapshot.bytesTransferred / snapshot.totalBytes) *\n//             100\n//           ).toFixed(2);\n//           setImageProgress(`${progress}%`);\n//           console.log(`Upload is ${progress}% done`);\n//         },\n//         (error) => {\n//           reject(error);\n//         },\n//         () => {\n//           getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n//             resolve(downloadURL);\n//           });\n//         }\n//       );\n//     });\n//   };\n\n//   const Adddatatodb = async () => {\n//     try {\n//       const formDataOrdered = {\n//         imageUrl: formData.imageUrl,\n//         CNIC: formData.CNIC,\n//         ApplicantName: formData.ApplicantName,\n//         FatherName: formData.FatherName,\n//         LicenseNo: formData.LicenseNo,\n//         WeaponType: formData.WeaponType,\n//         Caliber: formData.Caliber,\n//         WeaponNo: formData.WeaponNo,\n//         Cartridges: formData.Cartridges,\n//         Status: formData.Status,\n//         IssueDate: formData.IssueDate,\n//         ExpiryDate: formData.ExpiryDate,\n//       };\n//       push(dbref(db, \"licensedata\"), formDataOrdered)\n//         .then(() => {\n//           // Clear input and update local state\n//           // toast.success(\"Data added successfully\");\n//         })\n//         .catch((error) => {\n//           // toast.success(\"Error adding data: \", error);\n//         });\n//       setFormData({});\n//     } catch (error) {\n//       console.error(\"Error uploading image and saving form data:\", error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"flex justify-center flex-col  items-center w-[100vw] min-h-[100vh] bg-gray-300\">\n//       <img src=\"/assets/logo.png\" alt=\"\" className=\"w-[200px]\" />\n//       <p className=\"font-bold text-xl my-2\">Add details</p>\n//       <form\n//         className=\"my-4 flex flex-col gap-2 justify-start items-start border-2 p-4 \"\n//         onSubmit={(e) => handleSubmit(e)}\n//       >\n//         <label htmlFor=\"AplicantName\" className=\"text-normal\">\n//           Aplicant Name:\n//           <input\n//             type=\"text\"\n//             name=\"ApplicantName\"\n//             value={formData.ApplicantName || \"\"}\n//             onChange={handleChange}\n//             required\n//             placeholder=\"IFTIKHAR AHMAD\"\n//             className=\"px-4 py-2 min-w-[350px] rounded-md bg-transparent border border-[#0c3f16] focus:outline-none focus:border-blue-500\"\n//           />\n//         </label>\n\n//         <label htmlFor=\"FatherName\" className=\"text-normal\">\n//           Father Name:\n//           <input\n//             type=\"text\"\n//             name=\"FatherName\"\n//             value={formData.FatherName || \"\"}\n//             onChange={handleChange}\n//             required\n//             placeholder=\"SULTAN AHMAD\"\n//             className=\"px-4 py-2 min-w-[350px] rounded-md bg-transparent border border-[#0c3f16] focus:outline-none focus:border-blue-500\"\n//           />\n//         </label>\n//         <label htmlFor=\"CNIC\" className=\"text-normal\">\n//           CNIC Number:\n//           <input\n//             type=\"number\"\n//             name=\"CNIC\"\n//             value={formData.CNIC || \"\"}\n//             onChange={handleChange}\n//             required\n//             minLength=\"13\"\n//             maxLength=\"13\"\n//             className=\"px-4 py-2 min-w-[350px] rounded-md bg-transparent border border-[#0c3f16] focus:outline-none focus:border-blue-500\"\n//           />\n//         </label>\n\n//         <label htmlFor=\"LicenseNo\" className=\"text-normal\">\n//           License No.:\n//           <input\n//             type=\"text\"\n//             name=\"LicenseNo\"\n//             value={formData.LicenseNo || \"\"}\n//             onChange={handleChange}\n//             required\n//             placeholder=\"ID-3943\"\n//             className=\"px-4 py-2 min-w-[350px] rounded-md bg-transparent border border-[#0c3f16] focus:outline-none focus:border-blue-500\"\n//           />\n//         </label>\n\n//         <label htmlFor=\"WeaponType\" className=\"text-normal\">\n//           Weapon Type:\n//           <input\n//             type=\"text\"\n//             name=\"WeaponType\"\n//             value={formData.WeaponType || \"\"}\n//             onChange={handleChange}\n//             placeholder=\"Pistol\"\n//             required\n//             className=\"px-4 py-2 min-w-[350px] rounded-md bg-transparent border border-[#0c3f16] focus:outline-none focus:border-blue-500\"\n//           />\n//         </label>\n\n//         <label htmlFor=\"Caliber\" className=\"text-normal\">\n//           Caliber:\n//           <input\n//             type=\"text\"\n//             name=\"Caliber\"\n//             value={formData.Caliber || \"\"}\n//             onChange={handleChange}\n//             required\n//             placeholder=\"223 Bore\"\n//             className=\"px-4 py-2 min-w-[350px] rounded-md bg-transparent border border-[#0c3f16] focus:outline-none focus:border-blue-500\"\n//           />\n//         </label>\n\n//         <label htmlFor=\"WeaponNo\" className=\"text-normal\">\n//           Weapon No.:\n//           <input\n//             type=\"number\"\n//             name=\"WeaponNo\"\n//             value={formData.WeaponNo || \"\"}\n//             onChange={handleChange}\n//             required\n//             placeholder=\"604137\"\n//             className=\"px-4 py-2 min-w-[350px] rounded-md bg-transparent border border-[#0c3f16] focus:outline-none focus:border-blue-500\"\n//           />\n//         </label>\n\n//         <label htmlFor=\"Cartridges\" className=\"text-normal\">\n//           Cartridges:\n//           <input\n//             type=\"number\"\n//             name=\"Cartridges\"\n//             value={formData.Cartridges || \"\"}\n//             onChange={handleChange}\n//             required\n//             placeholder=\"200\"\n//             className=\"px-4 py-2 min-w-[350px] rounded-md bg-transparent border border-[#0c3f16] focus:outline-none focus:border-blue-500\"\n//           />\n//         </label>\n\n//         <label htmlFor=\"Status\" className=\"text-normal\">\n//           Status:\n//           <input\n//             type=\"text\"\n//             name=\"Status\"\n//             value={formData.Status || \"\"}\n//             onChange={handleChange}\n//             required\n//             placeholder=\"All Pakistan\"\n//             className=\"px-4 py-2 min-w-[350px] rounded-md bg-transparent border border-[#0c3f16] focus:outline-none focus:border-blue-500\"\n//           />\n//         </label>\n\n//         <label htmlFor=\"IssueDate\" className=\"text-normal\">\n//           Issue date:\n//           <input\n//             type=\"date\"\n//             name=\"IssueDate\"\n//             value={formData.IssueDate || \"\"}\n//             onChange={handleChange}\n//             required\n//             placeholder=\"03-02-2024\"\n//             className=\"px-4 py-2 min-w-[350px] rounded-md bg-transparent border border-[#0c3f16] focus:outline-none focus:border-blue-500\"\n//           />\n//         </label>\n\n//         <label htmlFor=\"ExpiryDate\" className=\"text-normal\">\n//           Expiry date:\n//           <input\n//             type=\"date\"\n//             name=\"ExpiryDate\"\n//             value={formData.ExpiryDate || \"\"}\n//             onChange={handleChange}\n//             required\n//             placeholder=\"31-12-2028\"\n//             className=\"px-4 py-2 min-w-[350px] rounded-md bg-transparent border border-[#0c3f16] focus:outline-none focus:border-blue-500\"\n//           />\n//         </label>\n//         <div className=\"flex jusitfy-start items-end gap-2 flex-col\">\n//           {formData.imageUrl ? (\n//             <img src={formData.imageUrl} alt=\"\" className=\"w-[200px]\" />\n//           ) : (\n//             <>\n//               <label htmlFor=\"ExpiryDate\" className=\"text-normal\">\n//                 Upload Image:\n//                 <input\n//                   type=\"file\"\n//                   onChange={(e) => setSelectedFile(e.target.files)}\n//                   required\n//                   accept=\"image/*\"\n//                   className=\"border p-3 rounded-lg\"\n//                 />\n//               </label>\n//               {selectedFile?.length > 0 && (\n//                 <>\n//                   <div\n//                     className=\"max-w-[200px] h-[40px] w-full rounded-md p-2 bg-slate-300 border border-[#0c3f16] cursor-pointer\"\n//                     onClick={handleImageSubmit}\n//                   >\n//                     {uploading ? `Uploading... ${ImageProgress}` : \"Upload\"}\n//                   </div>\n//                   <p className=\"text-red-700 text-sm\">\n//                     {imageUploadError && imageUploadError}\n//                   </p>\n//                 </>\n//               )}\n//             </>\n//           )}\n//         </div>\n//         <button\n//           type=\"submit\"\n//           className=\"max-w-[120px] w-full rounded-md p-2 bg-slate-300 border border-[#0c3f16]\"\n//         >\n//           Submit\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Index;\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}