{"ast":null,"code":"var _jsxFileName = \"/Users/mohsinidrees/Desktop/techsummit/application/client/src/components/checkout.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements, CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\n\n// Load your Stripe publishable key\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe(\"your-publishable-key-here\");\nconst CheckoutForm = () => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [succeeded, setSucceeded] = useState(false);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setLoading(true);\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement)\n    });\n    if (error) {\n      setError(error.message);\n      setLoading(false);\n    } else {\n      // Use paymentMethod.id to create a payment intent on your server\n      const response = await fetch(\"/create-payment-intent\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          paymentMethodId: paymentMethod.id,\n          amount: 1000\n        }) // amount in cents\n      });\n      const paymentIntent = await response.json();\n      if (paymentIntent.error) {\n        setError(paymentIntent.error.message);\n        setLoading(false);\n      } else {\n        setSucceeded(true);\n        setLoading(false);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      disabled: !stripe || loading,\n      children: loading ? \"Processing...\" : \"Pay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this), succeeded && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Payment succeeded!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(CheckoutForm, \"2vsmKFcNA9mEH5nfZS+DALdzFYY=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = CheckoutForm;\nconst PaymentComponent = () => {\n  return /*#__PURE__*/_jsxDEV(Elements, {\n    stripe: stripePromise,\n    children: /*#__PURE__*/_jsxDEV(CheckoutForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_c2 = PaymentComponent;\nexport default PaymentComponent;\nvar _c, _c2;\n$RefreshReg$(_c, \"CheckoutForm\");\n$RefreshReg$(_c2, \"PaymentComponent\");","map":{"version":3,"names":["React","useState","loadStripe","Elements","CardElement","useStripe","useElements","jsxDEV","_jsxDEV","stripePromise","CheckoutForm","_s","stripe","elements","error","setError","loading","setLoading","succeeded","setSucceeded","handleSubmit","event","preventDefault","paymentMethod","createPaymentMethod","type","card","getElement","message","response","fetch","method","headers","body","JSON","stringify","paymentMethodId","id","amount","paymentIntent","json","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","PaymentComponent","_c2","$RefreshReg$"],"sources":["/Users/mohsinidrees/Desktop/techsummit/application/client/src/components/checkout.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport {\n  Elements,\n  CardElement,\n  useStripe,\n  useElements,\n} from \"@stripe/react-stripe-js\";\n\n// Load your Stripe publishable key\nconst stripePromise = loadStripe(\"your-publishable-key-here\");\n\nconst CheckoutForm = () => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [succeeded, setSucceeded] = useState(false);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    setLoading(true);\n\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement),\n    });\n\n    if (error) {\n      setError(error.message);\n      setLoading(false);\n    } else {\n      // Use paymentMethod.id to create a payment intent on your server\n      const response = await fetch(\"/create-payment-intent\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          paymentMethodId: paymentMethod.id,\n          amount: 1000,\n        }), // amount in cents\n      });\n\n      const paymentIntent = await response.json();\n\n      if (paymentIntent.error) {\n        setError(paymentIntent.error.message);\n        setLoading(false);\n      } else {\n        setSucceeded(true);\n        setLoading(false);\n      }\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <CardElement />\n      <button type=\"submit\" disabled={!stripe || loading}>\n        {loading ? \"Processing...\" : \"Pay\"}\n      </button>\n      {error && <div>{error}</div>}\n      {succeeded && <div>Payment succeeded!</div>}\n    </form>\n  );\n};\n\nconst PaymentComponent = () => {\n  return (\n    <Elements stripe={stripePromise}>\n      <CheckoutForm />\n    </Elements>\n  );\n};\n\nexport default PaymentComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}