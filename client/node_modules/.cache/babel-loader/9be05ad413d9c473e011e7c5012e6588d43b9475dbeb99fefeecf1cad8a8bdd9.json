{"ast":null,"code":"import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport activePage from \"./reducers/activePage\";\nimport favouriteProduct from \"./reducers/favouriteProduct\";\n// import propertyReducer, { fetchData } from \"./reducers/allProperties\";\nimport userReducer from \"./reducers/userReducer\";\nimport { persistReducer, persistStore } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nconst rootReducer = combineReducers({\n  activepage: activePage,\n  favouriteproduct: favouriteProduct,\n  // properties: propertyReducer,\n  user: userReducer\n});\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  version: 1,\n  whitelist: [\"user\", \"favouriteproduct\"]\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false\n  })\n});\nstore.dispatch(fetchData());\nexport const persistor = persistStore(store);","map":{"version":3,"names":["configureStore","combineReducers","activePage","favouriteProduct","userReducer","persistReducer","persistStore","storage","rootReducer","activepage","favouriteproduct","user","persistConfig","key","version","whitelist","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","dispatch","fetchData","persistor"],"sources":["/Users/mohsinidrees/Desktop/techsummit/application/client/src/app/store.js"],"sourcesContent":["import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport activePage from \"./reducers/activePage\";\nimport favouriteProduct from \"./reducers/favouriteProduct\";\n// import propertyReducer, { fetchData } from \"./reducers/allProperties\";\nimport userReducer from \"./reducers/userReducer\";\nimport { persistReducer, persistStore } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst rootReducer = combineReducers({\n  activepage: activePage,\n  favouriteproduct: favouriteProduct,\n  // properties: propertyReducer,\n  user: userReducer,\n});\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  version: 1,\n  whitelist: [\"user\", \"favouriteproduct\"],\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n    }),\n});\n\nstore.dispatch(fetchData());\nexport const persistor = persistStore(store);\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,eAAe,QAAQ,kBAAkB;AAClE,OAAOC,UAAU,MAAM,uBAAuB;AAC9C,OAAOC,gBAAgB,MAAM,6BAA6B;AAC1D;AACA,OAAOC,WAAW,MAAM,wBAAwB;AAChD,SAASC,cAAc,EAAEC,YAAY,QAAQ,eAAe;AAC5D,OAAOC,OAAO,MAAM,2BAA2B;AAE/C,MAAMC,WAAW,GAAGP,eAAe,CAAC;EAClCQ,UAAU,EAAEP,UAAU;EACtBQ,gBAAgB,EAAEP,gBAAgB;EAClC;EACAQ,IAAI,EAAEP;AACR,CAAC,CAAC;AAEF,MAAMQ,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXN,OAAO;EACPO,OAAO,EAAE,CAAC;EACVC,SAAS,EAAE,CAAC,MAAM,EAAE,kBAAkB;AACxC,CAAC;AAED,MAAMC,gBAAgB,GAAGX,cAAc,CAACO,aAAa,EAAEJ,WAAW,CAAC;AAEnE,OAAO,MAAMS,KAAK,GAAGjB,cAAc,CAAC;EAClCkB,OAAO,EAAEF,gBAAgB;EACzBG,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;EACrB,CAAC;AACL,CAAC,CAAC;AAEFJ,KAAK,CAACK,QAAQ,CAACC,SAAS,CAAC,CAAC,CAAC;AAC3B,OAAO,MAAMC,SAAS,GAAGlB,YAAY,CAACW,KAAK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}